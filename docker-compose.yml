version: '3.5'

services:
  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    restart: unless-stopped


  api:
    build: ./backend
    container_name: backend
    restart: unless-stopped
    environment:
      - BACKEND_PORT=3005
      - SERVER_NAME=0.0.0.0
      - DEBUG_MODE=${DEBUG_MODE:?err}
      - JWT_SECRET=${JWT_SECRET:?err}
      - JWT_SIGN_ALGORITHM=${JWT_SIGN_ALGORITHM:?err}
      - JWT_TTL=${JWT_TTL:?err}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err}
      # - DATABASE_URL=sqlite:///pbrDatabase.sqlite3
      - DATABASE_URL=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD:?err}@db/pbr
    depends_on:
      - db

  # test:
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile-test
  #   container_name: test
  #   volumes:
  #     - ./backend/:/usr/src/app/
  #   stdin_open: true
  #   environment:
  #     - BACKEND_PORT=3006
  #     - SERVER_NAME=0.0.0.0
  #     - DEBUG_MODE=${DEBUG_MODE:?err}
  #     - JWT_SECRET=${JWT_SECRET:?err}
  #     - JWT_SIGN_ALGORITHM=${JWT_SIGN_ALGORITHM:?err}
  #     - JWT_TTL=${JWT_TTL:?err}
  #     - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err}
  #     # - DATABASE_URL=sqlite:///pbrDatabase.sqlite3
  #     - DATABASE_URL=mysql+pymysql://root:${MYSQL_ROOT_PASSWORD:?err}@db/pbr

  app:
    build: ./pbr
    container_name: pbr
    restart: unless-stopped
    environment:
      - PORT=3030
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err}

      # Fine on dev not on Production see: https://stackoverflow.com/a/60250859
      - DANGEROUSLY_DISABLE_HOST_CHECK=true

  db:
    image: mysql
    platform: linux/amd64 #Necessary for M1 chip Mac
    container_name: db
    volumes:
      - dbdata:/var/lib/mysql
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=pbr
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:?err} 

volumes:
  dbdata: 